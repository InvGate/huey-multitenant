import logging
import os
import sys

from django.utils.module_loading import autodiscover_modules
from django.core.management.base import BaseCommand
from huey_multitenant.registry import registry

logger = logging.getLogger(__name__)


class Command(BaseCommand):
    help = 'This command creates the schedule.info file with all info about periodic tasks.'

    def handle(self, *args, **options):
        autodiscover_modules("tasks")
        logger.info('Discovering Periodic Tasks:')
        with open(os.path.join(os.path.dirname(sys.argv[0]), 'schedule.info'), 'w') as f:
            f.write("""# Autogenerated schedule info file. Don't touch this file directly, instead configure your decorated task.
# Format:
#   minute | hour | day_of_week | day | month | method
# For day-of-week, 0=Sunday and 6=Saturday.
# Acceptable inputs:
#    * = every distinct value
#    */n = run every "n" times, i.e. hours='*/4' == 0, 4, 8, 12, 16, 20
#    m-n = run every time m..n
#    m,n = run on m and n
#\n""")
            for task in registry.get_periodic_tasks():
                logger.info('+ {}'.format(task['task']))
                f.write(registry.task_cron(task))

        sys.exit(0)



